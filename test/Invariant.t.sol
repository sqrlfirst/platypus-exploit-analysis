// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.10;

import "forge-std/Test.sol";
import "../src/libraries/Constants.sol";
import { IERC20 } from "forge-std/interfaces/IERC20.sol";
import "../src/interfaces/IAaveFlashloan.sol";
import "../src/interfaces/IMasterPlatypusV4.sol";
import "../src/interfaces/IPlatypusPool.sol";
import "../src/interfaces/IPlatypusTreasure.sol";
import "../src/interfaces/CheatCodes.sol";
import "../src/Helper.sol";



contract Invariant is Test {

    IERC20 USP = IERC20(Constants.USP);
    
    CheatCodes cheatCodes = CheatCodes(0x7109709ECfa91a80626fF3989D68f67F5b1DD12D);
    Helper helper;


    function setUp() external {
        cheatCodes.createSelectFork("Avalanche", 26_343_613);
        helper = new Helper();
        
        // targetContract(address(helper));
    }

    function invariant_withdrawBackingFunds() external {
        assertEq(
            0,
            USP.balanceOf(address(helper))
        );
    }

}