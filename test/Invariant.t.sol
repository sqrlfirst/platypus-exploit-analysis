// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.10;

import "forge-std/Test.sol";
import "../src/libraries/Constants.sol";
import { IERC20 } from "forge-std/interfaces/IERC20.sol";
import "../src/interfaces/IAaveFlashloan.sol";
import "../src/interfaces/IMasterPlatypusV4.sol";
import "../src/interfaces/IPlatypusPool.sol";
import "../src/interfaces/IPlatypusTreasure.sol";
import "../src/interfaces/CheatCodes.sol";


contract Invariant is DSTest {

    IERC20 USDC = IERC20(Constants.USDC);
    IERC20 USP = IERC20(Constants.USP);
    IERC20 USDC_E = IERC20(Constants.USDC_E);
    IERC20 USDT = IERC20(Constants.USDT);
    IERC20 USDT_E = IERC20(Constants.USDT_E);
    IERC20 BUSD = IERC20(Constants.BUSD);
    IERC20 DAI_E = IERC20(Constants.DAI_E);
    IERC20 LPUSDC = IERC20(Constants.LPUSDC);
    PlatypusPool Pool = PlatypusPool(Constants.PLATYPUS_POOL);
    MasterPlatypusV4 Master = MasterPlatypusV4(Constants.PLATYPUS_MASTERPLATYPUSV4);
    PlatypusTreasure Treasure = PlatypusTreasure(Constants.PLATYPUS_TREASURE);
    IAaveFlashloan aaveV3 = IAaveFlashloan(Constants.AAVE_V3);

    CheatCodes cheatCodes = CheatCodes(0x7109709ECfa91a80626fF3989D68f67F5b1DD12D);

    function setUp() external {
        cheatCodes.createSelectFork("Avalanche", 26_343_613);
    }

    function invariant_A() external {
        
    }

}